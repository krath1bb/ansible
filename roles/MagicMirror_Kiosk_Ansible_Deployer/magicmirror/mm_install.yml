---
  - name: add node repo
    shell:
      cmd: curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -

  - name: install node
    become: true
    apt:
      pkg: nodejs

  - name: Create Install Directory
    file:
      path: "{{ mm_root }}"
      state: directory

  - name: Clone Magic Mirror
    git:
      repo: https://github.com/MichMich/MagicMirror
      dest: "{{ mm_root }}"
      version: master
      force: yes

  - name: NPM Install
    npm:
      path: "{{ mm_root }}"

  - name: npm run install-mm
    npm:
      path: "{{ mm_root }}/install-mm"

  - name: update npm
    become: true
    command:
      chdir: "{{ mm_root }}"
      cmd: "npm install pm2 -g && pm2 update"

  - name: install npm auto-complete
    become: true
    command:
      chdir: "{{ mm_root }}"
      cmd: pm2 completion install

  # this has prompts which reauires manual entry during running, this doesn't play well with ansible
  #- name: Install MagicMirror scripted
  #  shell:
  #    cmd: bash -c  "$(curl -sL https://raw.githubusercontent.com/sdetweil/MagicMirror_scripts/master/raspberry.sh)"

  - name: Turn off screen saver
    shell:
      cmd: bash -c "$(curl -sL https://raw.githubusercontent.com/sdetweil/MagicMirror_scripts/master/screensaveroff.sh)"

  - name: add using pm2 to autostart MagicMirror at bootup
    shell:
      cmd: bash -c "$(curl -sL https://raw.githubusercontent.com/sdetweil/MagicMirror_scripts/master/fixuppm2.sh)"


  - name: add MM aliases in .profile
    lineinfile:
      dest: /home/pi/.profile
      line: '{{ item }}'
    with_items:
      - 'alias goMM="cd {{mm_root}}"'
      - 'alias checkMM="pushd {{mm_root}} && npm run config:check && popd"'
      - 'alias infoMM="pm2 info MagicMirror"'
      - 'alias logMM="pm2 logs MagicMirror"'
      - 'alias statMM="pm2 status"'
      - 'alias envMM="pm2 env 0"'

  - name: copy HOST.custom.css
    copy:
      src: "./files/{{ hosts }}.custom.css"
      dest: "{{ mm_root }}/css/custom.css"

  - name: Install Modules
    include_tasks: ./library/install_module.yml
    when: item.github is defined
    with_items: "{{ modules }}"


  - name: Magic Mirror Config.js
    template:
      src: './files/config.js.j2'
      dest: "{{ mm_root }}/config/config.js"

  - name: check config.js file
    shell: "cd {{ mm_root }} && npm run config:check"
    notify:
      - restart MM

  - name: check config.js files
    command:
      chdir: "{{ mm_root }}/config"
      cmd: npm run config:check

  - name: delete host specific cronjobs
    ansible.builtin.cron:
      "{{item | combine ({'state' : 'absent'}) }}"
    loop:
      "{{ hostc.crontabs }}"
    when:
      - hostc is defined
      - hostc.crontabs is defined

  - name: delete group specific cronjobs
    # source ./group_vars/<groupname>/crontabs.yml
    ansible.builtin.cron:
      "{{item | combine ({'state' : 'absent'}) }}"
    with_items: "{{ group.crontabs }}"
    when:
      - group is defined
      - group.crontabs is defined

  - name: add host specific cronjobs
    # source ./hosts_vars/<hostname>/crontabs.yml
    ansible.builtin.cron:
      "{{item}}"
    loop:
      "{{ hostc.crontabs }}"
    when:
      - hostc is defined
      - hostc.crontabs is defined

  - name: add group specific cronjobs
    # source ./group_vars/<groupname>/crontabs.yml
    ansible.builtin.cron:
      "{{item}}"
    with_items: "{{ group.crontabs }}"
    when:
      - group is defined
      - group.crontabs is defined