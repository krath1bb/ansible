---
- name: Unpin 'Search' from Taskbar
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Search
    name: SearchboxTaskbarMode
    data: 0
    type: dword

- name: Unpin Task View, Chat, Cortana, and left-align taskbar
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: "{{ item }}"
    data: 0
    type: dword
  loop:
    - ShowCortanaButton
    - ShowTaskViewButton
    - TaskbarDa
    - TaskbarMn
    - TaskbarAl

- name: Unpin 'News and Interests' from Taskbar
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds
    name: EnableFeeds
    data: 0
    type: dword
    state: present

- name: Unpin 'People' from Taskbar
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People
    name: PeopleBand
    data: 0
    type: dword

- name: Unpin 'Edge', 'Store' other built-in shortcuts from Taskbar
  ansible.windows.win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Taskband
    name: Favorites
    state: absent

- name: Customize Taskbar
  ansible.windows.win_powershell:
    script: |
      # Function to pin an item to the taskbar
      function Pin-ItemToTaskbar {
          param (
              [string]$itemPath
          )

          # Create a Shell.Application COM object
          $shell = New-Object -ComObject Shell.Application

          # Get the current user's taskbar pins folder
          $taskbarPins = "$env:APPDATA\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar"

          # Check if the item already exists in the taskbar pins folder
          if (-Not (Test-Path -Path "$taskbarPins\$(Split-Path -Leaf $itemPath)")) {
              # Create a temporary folder
              $tempFolder = New-Item -ItemType Directory -Path ([System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), [System.Guid]::NewGuid().ToString()))

              try {
                  # Copy the shortcut to the temporary folder
                  Copy-Item -Path $itemPath -Destination $tempFolder.FullName

                  # Get the shortcut item in the temporary folder
                  $tempShortcut = "$tempFolder\$([System.IO.Path]::GetFileName($itemPath))"
                  $shortcut = $shell.NameSpace($tempFolder.FullName).ParseName([System.IO.Path]::GetFileName($tempShortcut))

                  # Invoke the context menu action "Pin to Taskbar"
                  $verb = $shortcut.Verbs() | Where-Object { $_.Name -eq "Pin to tas&kbar" }
                  if ($verb) {
                      $verb.DoIt()
                  } else {
                      Write-Host "Pin to Taskbar option not available for this item."
                  }
              } finally {
                  # Remove the temporary folder
                  Remove-Item -Recurse -Force -Path $tempFolder.FullName
              }
          } else {
              Write-Host "Item is already pinned to the taskbar."
          }
      }

      # Example usage
      # Path to the shortcut of the application you want to pin
      $shortcutPath = "{{ item }}"

      Pin-ItemToTaskbar -itemPath $shortcutPath
  loop: "{{ taskbar_pinned_icons }}"